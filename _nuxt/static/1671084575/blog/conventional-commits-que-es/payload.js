__NUXT_JSONP__("/blog/conventional-commits-que-es", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS){return {data:[{article:{slug:"conventional-commits-que-es",description:"Conventional Commits es una convención en el mensaje de los commits que te llevarán al siguiente nivel.",title:"Conventional Commits - Qué es y por qué deberías empezar a utilizarlo",img:"https:\u002F\u002Fres.cloudinary.com\u002Fdp1r5podd\u002Fimage\u002Fupload\u002Fv1642529538\u002Falbertochamorro.dev\u002FConventional_Commits_frok1v.webp",thumbnail:"https:\u002F\u002Fres.cloudinary.com\u002Fdp1r5podd\u002Fimage\u002Fupload\u002Fc_scale,w_360\u002Fv1642529538\u002Falbertochamorro.dev\u002FConventional_Commits_frok1v.webp",metaImg:"https:\u002F\u002Fres.cloudinary.com\u002Fdp1r5podd\u002Fimage\u002Fupload\u002Fc_scale,w_360\u002Fv1642529538\u002Falbertochamorro.dev\u002FConventional_Commits_frok1v.jpg",alt:"Cartel del artículo Conventional Commits",tags:["general","git","javascript"],date:"2022-01-18T00:00:00.000Z",articleUrl:"https:\u002F\u002Falbertochamorro.dev\u002Fblog\u002Fconventional-commits-que-es",toc:[{id:X,depth:C,text:Y},{id:Z,depth:C,text:_},{id:$,depth:C,text:aa},{id:Q,depth:u,text:ab},{id:ac,depth:u,text:ad},{id:ae,depth:u,text:af},{id:ag,depth:u,text:ah},{id:ai,depth:u,text:aj},{id:ak,depth:C,text:al},{id:am,depth:u,text:an},{id:ao,depth:u,text:"Mismo commit que antes pero indicando la ruptura de compatibilidad con !"},{id:ap,depth:u,text:aq},{id:ar,depth:u,text:as},{id:at,depth:C,text:au},{id:av,depth:C,text:aw},{id:ax,depth:C,text:ay}],body:{type:"root",children:[{type:b,tag:h,props:{},children:[{type:a,value:"¿Alguna vez te ha pasado que no sabes que formato usar al escribir un mensaje de un commit? ¿Cada persona del equipo sigue un formato diferente porque no hay un acuerdo entre todos? O lo que es peor, ¿usa emojis en los commits? Yo he sido de esos..."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Pues Conventional Commits llega para solucionar todos esos problemas y más."}]},{type:a,value:c},{type:b,tag:D,props:{id:X},children:[{type:b,tag:f,props:{href:"#pero-qu%C3%A9-es-conventional-commits",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:Y}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.conventionalcommits.org\u002F",rel:[i,j,k],target:l},children:[{type:a,value:az}]},{type:a,value:" es una convención en el formato de los mensajes de los commits. Esta convención define una serie de reglas que hacen muy sencillo tanto la legibilidad del histórico del repositorio como el poder tener herramientas que automaticen procesos basándose en el historial de commits, por ejemplo, a la hora del versionado del proyecto."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Esta convención está muy ligada con "},{type:b,tag:f,props:{href:"http:\u002F\u002Fsemver.org\u002F",rel:[i,j,k],target:l},children:[{type:a,value:"Semantic Versioning"}]},{type:a,value:" (o SemVer), estableciendo la versión del proyecto basándose en los commits del repositorio."}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Conventional Commits es una especificación para dar significado a los mensajes de los commits haciéndolos legibles para máquinas y humanos."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:Z},children:[{type:b,tag:f,props:{href:"#semantic-versioning-o-semver",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:_}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"A modo resumen, SemVer es la convención más extendida para establecer un versionado a librerías, paquetes, dependencias, y a la vida en general 🙃"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"El versionado se divide en tres bloques:"}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:"\u002F\u002F MAJOR.MINOR.PATCH"}]},{type:a,value:R},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"2.12"}]},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:".7"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:"\u002F\u002F 2 -\u003E MAJOR"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:"\u002F\u002F 12 -\u003E MINOR"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:"\u002F\u002F 7 -\u003E PATCH"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:aA}]},{type:a,value:": número de versión que se incrementa cuando se rompe la compatibilidad de versiones anteriores."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:aB}]},{type:a,value:": número de versión que se incrementa cuando se añade funcionalidad y esta es compatible en la versión MAJOR actual."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:aC}]},{type:a,value:": número de versión que se incrementa cuando se arreglan errores en la versión MAJOR.MINOR actual."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Adicionalmente está permitido (y es muy común) añadir al bloque PATCH información adicional indicando si son versiones previas a un nuevo lanzamiento (alpha, beta, next, rc, ...) y el número de la compilación. Esta información adicional debe ir en el bloque PATCH precedido por un guión "},{type:b,tag:r,props:{},children:[{type:a,value:S}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Un ejemplo:"}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"12.2"}]},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:".0"}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:S}]},{type:a,value:"alpha"},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"0"}]},{type:a,value:R},{type:b,tag:d,props:{className:[e,H]},children:[{type:a,value:"\u002F\u002F Aquí \"alpha\" indica el estado de la compilación y \".0\" indica el número de compilación"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Todo el detalle puedes consultarlo en la página oficial de "},{type:b,tag:f,props:{href:"https:\u002F\u002Fsemver.org\u002F",rel:[i,j,k],target:l},children:[{type:a,value:"SemVer"}]},{type:a,value:". Ahora sí, volvamos a Conventional Commits."}]},{type:a,value:c},{type:b,tag:D,props:{id:$},children:[{type:b,tag:f,props:{href:"#especificaci%C3%B3n-de-conventional-commits",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:aa}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Conventional Commits especifica que el mensaje de commit debe ser estructurado de la siguiente manera:"}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:M}]},{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:N}]}]},{type:b,tag:d,props:{className:[e,O]},children:[{type:a,value:"(ámbito opcional): \u003Cdescripción\u003E\n"}]},{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:M}]},{type:b,tag:d,props:{className:[e,aD]},children:[{type:a,value:aE}]}]},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:N}]}]},{type:b,tag:d,props:{className:[e,O]},children:[{type:a,value:"\n[cuerpo opcional]\n"}]},{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:M}]},{type:b,tag:d,props:{className:[e,aD]},children:[{type:a,value:aE}]}]},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:N}]}]},{type:b,tag:d,props:{className:[e,O]},children:[{type:a,value:"\n[nota(s) al pie opcional(es)]\n"}]}]}]}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Hay ciertos elementos que serán utilizados para comunicar la intención del commit a terceros:"}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:aF},{type:b,tag:m,props:{},children:[{type:a,value:T}]},{type:a,value:" indica que el commit es un parche de un error y está relacionado con la versión "},{type:b,tag:f,props:{href:aG,rel:[i,j,k],target:l},children:[{type:a,value:aC}]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:aF},{type:b,tag:m,props:{},children:[{type:a,value:I}]},{type:a,value:" indica que el commit añade una nueva funcionalidad y se relaciona con la versión "},{type:b,tag:f,props:{href:aG,rel:[i,j,k],target:l},children:[{type:a,value:aB}]},{type:a,value:U}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Añadir el texto "},{type:b,tag:m,props:{},children:[{type:a,value:"BREAKING CHANGE"}]},{type:a,value:" en el footer de un commit, o el carácter "},{type:b,tag:r,props:{},children:[{type:a,value:V}]},{type:a,value:" después del tipo, indica que se rompe la compatibilidad de la versión actual y está relacionado con la versión "},{type:b,tag:f,props:{href:"http:\u002F\u002Fsemver.org\u002F#summary",rel:[i,j,k],target:l},children:[{type:a,value:aA}]},{type:a,value:U}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Espero que aún no hayas hecho 🤯  porque de verdad que es muy sencillo. Vamos a ver cada una de las zonas del commit en detalle."}]},{type:a,value:c},{type:b,tag:v,props:{id:Q},children:[{type:b,tag:f,props:{href:"#tipo",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:ab}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"El primer elemento es el tipo de commit refiriéndose al contenido del commit. Basados en la "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fblob\u002F22b96b9\u002FCONTRIBUTING.md#-commit-message-guidelines",rel:[i,j,k],target:l},children:[{type:a,value:"convención establecida por Angular"}]},{type:a,value:" estos son:"}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:I}]},{type:a,value:": cuando se añade una nueva funcionalidad."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:T}]},{type:a,value:": cuando se arregla un error."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"chore"}]},{type:a,value:": tareas rutinarias que no sean específicas de una feature o un error como por ejemplo añadir contenido al fichero "},{type:b,tag:r,props:{},children:[{type:a,value:".gitignore"}]},{type:a,value:" o instalar una dependencia."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"test"}]},{type:a,value:": si añadimos o arreglamos tests."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"docs"}]},{type:a,value:": cuando solo se modifica documentación."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"build"}]},{type:a,value:": cuando el cambio afecta al compilado del proyecto."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"ci"}]},{type:a,value:": el cambio afecta a ficheros de configuración y scripts relacionados con la integración continua."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"style"}]},{type:a,value:": cambios de legibilidad o formateo de código que no afecta a funcionalidad."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"refactor"}]},{type:a,value:": cambio de código que no corrige errores ni añade funcionalidad, pero mejora el código."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"perf"}]},{type:a,value:": usado para mejoras de rendimiento."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:m,props:{},children:[{type:a,value:"revert"}]},{type:a,value:": si el commit revierte un commit anterior. Debería indicarse el hash del commit que se revierte."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:v,props:{id:ac},children:[{type:b,tag:f,props:{href:"#%C3%A1mbito",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:ad}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"El campo ámbito es opcional y sirve para dar información contextual como por ejemplo indicar el nombre de la feature a la que afecta el commit."}]},{type:a,value:c},{type:b,tag:v,props:{id:ae},children:[{type:b,tag:f,props:{href:"#descripci%C3%B3n",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:af}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Breve descripción del cambio cumpliendo lo siguiente:"}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"usa imperativos, en tiempo presente: “añade” mejor que “añadido” o “añadidos”"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"la primera letra siempre irá en minúscula"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"no escribir un punto al final"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:v,props:{id:ag},children:[{type:b,tag:f,props:{href:"#cuerpo",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:ah}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Es opcional y debería añadir aportar más información que la descripción. Debería usar el mismo tono imperativo que esta."}]},{type:a,value:c},{type:b,tag:v,props:{id:ai},children:[{type:b,tag:f,props:{href:"#nota-al-pie",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Es opcional. Siempre se utiliza para indicar cambios que rompan la compatibilidad de la versión actual (Breaking Changes) aunque también están permitidos otros formatos que sigan la convención de "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgit-scm.com\u002Fdocs\u002Fgit-interpret-trailers",rel:[i,j,k],target:l},children:[{type:a,value:"git trailer format"}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Si el pie de página indica un Breaking Change, el formato deberá ser el siguiente:"}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:aH}]},{type:a,value:K},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:aI}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:K},{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,B]},children:[{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:M}]},{type:a,value:"description"}]},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:N}]}]},{type:b,tag:d,props:{className:[e,O]},children:[{type:a,value:c}]}]}]}]},{type:a,value:c},{type:b,tag:"br",props:{},children:[]},{type:a,value:c},{type:b,tag:aJ,props:{},children:[]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"¿A que no ha sido tan difícil? Venga que seguro que unos ejemplos te ayudan."}]},{type:a,value:c},{type:b,tag:D,props:{id:ak},children:[{type:b,tag:f,props:{href:"#ejemplos",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:al}]},{type:a,value:c},{type:b,tag:v,props:{id:am},children:[{type:b,tag:f,props:{href:"#commit-rompiendo-la-compatibilidad-de-la-versi%C3%B3n-actual",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:an}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,aK,aL]},children:[{type:a,value:I}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:" allow provided config object to extend other configs\n\n"},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:aH}]},{type:a,value:K},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:aI}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:K},{type:b,tag:d,props:{className:[e,"template-string"]},children:[{type:b,tag:d,props:{className:[e,aM,W]},children:[{type:a,value:aN}]},{type:b,tag:d,props:{className:[e,W]},children:[{type:a,value:"extends"}]},{type:b,tag:d,props:{className:[e,aM,W]},children:[{type:a,value:aN}]}]},{type:a,value:" key "},{type:b,tag:d,props:{className:[e,P]},children:[{type:a,value:aO}]},{type:a,value:" config file is now used "},{type:b,tag:d,props:{className:[e,P,aP]},children:[{type:a,value:aQ}]},{type:a,value:" extending other config files\n"}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:ao},children:[{type:b,tag:f,props:{href:"#mismo-commit-que-antes-pero-indicando-la-ruptura-de-compatibilidad-con-",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:"Mismo commit que antes pero indicando la ruptura de compatibilidad con "},{type:b,tag:r,props:{},children:[{type:a,value:V}]}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:a,value:I},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:V}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:" allow provided config object to extend other configs\n"}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:ap},children:[{type:b,tag:f,props:{href:"#commit-con-%C3%A1mbito",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:aq}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,"function"]},children:[{type:a,value:I}]},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:"("}]},{type:a,value:"lang"},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:")"}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:" add spanish language\n"}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:ar},children:[{type:b,tag:f,props:{href:"#commit-con-cuerpo-y-notas-al-pie",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:as}]},{type:a,value:c},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:r,props:{},children:[{type:b,tag:d,props:{className:[e,aK,aL]},children:[{type:a,value:T}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:" correct minor typos "},{type:b,tag:d,props:{className:[e,P]},children:[{type:a,value:aO}]},{type:a,value:" code\n\nsee the issue "},{type:b,tag:d,props:{className:[e,P,aP]},children:[{type:a,value:aQ}]},{type:a,value:" details\n\non typos fixed"},{type:b,tag:d,props:{className:[e,s]},children:[{type:a,value:L}]},{type:a,value:R},{type:b,tag:d,props:{className:[e,"property-access"]},children:[{type:b,tag:d,props:{className:[e,aR]},children:[{type:a,value:"Reviewed"}]}]},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:S}]},{type:a,value:"by"},{type:b,tag:d,props:{className:[e,t]},children:[{type:a,value:F}]},{type:a,value:K},{type:b,tag:d,props:{className:[e,J]},children:[{type:a,value:"Z"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,aR]},children:[{type:a,value:"Refs"}]},{type:a,value:" #"},{type:b,tag:d,props:{className:[e,G]},children:[{type:a,value:"133"}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:D,props:{id:at},children:[{type:b,tag:f,props:{href:"#por-qu%C3%A9-usar-conventional-commits",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:au}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Conseguimos un acuerdo en el formato de los commits con todo el equipo de desarrollo tanto interno como externo"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Armonía en el histórico del repositorio"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Generación automática de CHANGELOG"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:a,value:"Versionado automático del proyecto"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:av},children:[{type:b,tag:f,props:{href:"#herramientas",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:aw}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Hay muchas librerías, extensiones y linters que se integran con la convención de Conventional Commits para validar los mensajes de los commits, generar documentación como alimentar el fichero "},{type:b,tag:r,props:{},children:[{type:a,value:"CHANGELOG"}]},{type:a,value:" o para versionar automáticamente el proyecto."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"En la web de "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.conventionalcommits.org\u002Fen\u002Fabout\u002F#tooling-for-conventional-commits",rel:[i,j,k],target:l},children:[{type:a,value:az}]},{type:a,value:" se listan un montón de estas herramientas para Go, Python, PHP, Java y JavaScript. Además hay plugins para tu editor favorito seguro así que te animo a que pases a echarle un vistazo."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Algunas de las más famosas en el ecosistema JavaScript son:"}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fconventional-changelog\u002Fstandard-version",rel:[i,j,k],target:l},children:[{type:a,value:"standard-version"}]},{type:a,value:": librería creada por la gente de Conventional commits, automatiza la generación del CHANGELOG y genera la siguiente versión en base a las tags de versiones anteriores en tu repositorio y a los commits posteriores a esa tag. Genera un commit incluyendo la versión en el mensaje y los ficheros que ha creado\u002Factualizado automáticamente y el tag con la nueva versión."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fsemantic-release\u002Fsemantic-release",rel:[i,j,k],target:l},children:[{type:a,value:"semantic-release"}]},{type:a,value:": otra herramienta más completa que la anterior y más extendida por la comunidad. Automatiza todo el flujo de desarrollo y versionado trabajando con ramas (master, next, beta, alpha, etc), genera versionado analizando las tags en estas ramas y los commits, genera las notas de la nueva versión, realiza commit con todos los cambios y lanza la publicación del paquete. ¡Un todo en uno en toda regla!"}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fdhoulb\u002Fmulti-semantic-release",rel:[i,j,k],target:l},children:[{type:a,value:"multi-semantic-release"}]},{type:a,value:": si lo tuyo son los monorepos esta es tu librería. Sigue el mismo concepto que semantic-release pero funciona con monorepos, determinando el versionado para cada uno de los workspaces dentro de tu proyecto."}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fconventional-changelog\u002Fcommitlint",rel:[i,j,k],target:l},children:[{type:a,value:"commitlint"}]},{type:a,value:": uno de los linters más famosos cuando hablamos de mensajes de commits y con una integración directa con Conventional Commits. Puedes usarlo por ejemplo con "},{type:b,tag:r,props:{},children:[{type:a,value:"simple-git-hooks"}]},{type:a,value:" o "},{type:b,tag:r,props:{},children:[{type:a,value:"husky"}]},{type:a,value:" para validar los mensajes del proyecto antes de que se registren en el histórico del repositorio y poder rechazarlo si no cumple el formato."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:ax},children:[{type:b,tag:f,props:{href:"#algunos-proyectos-que-lo-usan",ariaHidden:n,tabIndex:o},children:[{type:b,tag:d,props:{className:[p,q]},children:[]}]},{type:a,value:ay}]},{type:a,value:c},{type:b,tag:E,props:{},children:[{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue",rel:[i,j,k],target:l},children:[{type:a,value:"vue"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fionic-team\u002Fionic-framework",rel:[i,j,k],target:l},children:[{type:a,value:"ionic"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fionic-team\u002Fstencil",rel:[i,j,k],target:l},children:[{type:a,value:"stencil"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Felectron\u002Felectron",rel:[i,j,k],target:l},children:[{type:a,value:"electron"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fremix-run\u002Fremix",rel:[i,j,k],target:l},children:[{type:a,value:"remix"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fyargs\u002Fyargs",rel:[i,j,k],target:l},children:[{type:a,value:"yargs"}]}]},{type:a,value:c},{type:b,tag:g,props:{},children:[{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Ffacebook\u002Fdocusaurus",rel:[i,j,k],target:l},children:[{type:a,value:"docusaurus"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:aJ,props:{},children:[]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"Espero que a partir de ahora utilices esta convención para tus commits, estaré vigilándote 🕵️‍."}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"¿Quieres cambiar algo de este artículo? Puedes enviarme una PR "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fachamorro-dev\u002Falbertochamorro.dev\u002Fblob\u002Fmain\u002Fcontent\u002Farticles\u002Fconventional-commits-que-es.md",rel:[i,j,k],target:l},children:[{type:a,value:"para este artículo"}]}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:"¡Gracias por leer hasta aquí y hasta la próxima 👋!"}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fconventional-commits-que-es",extension:".md",createdAt:aS,updatedAt:aS}}],fetch:{},mutations:void 0}}("text","element","\n","span","token","a","li","p","nofollow","noopener","noreferrer","_blank","strong","true",-1,"icon","icon-link","code","punctuation","operator",3,"h3","div","nuxt-content-highlight","pre","language-jsx","line-numbers","tag",2,"h2","ul",":","number","comment","feat","constant"," ",".","\u003C","\u003E","plain-text","keyword","tipo","\n\n","-","fix"," del proyecto.","!","string","pero-qué-es-conventional-commits","Pero, ¿qué es Conventional Commits?","semantic-versioning-o-semver","Semantic Versioning o SemVer","especificación-de-conventional-commits","Especificación de Conventional Commits","Tipo","ámbito","Ámbito","descripción","Descripción","cuerpo","Cuerpo","nota-al-pie","Nota al pie","ejemplos","Ejemplos","commit-rompiendo-la-compatibilidad-de-la-versión-actual","Commit rompiendo la compatibilidad de la versión actual","mismo-commit-que-antes-pero-indicando-la-ruptura-de-compatibilidad-con-","commit-con-ámbito","Commit con ámbito","commit-con-cuerpo-y-notas-al-pie","Commit con cuerpo y notas al pie","por-qué-usar-conventional-commits","¿Por qué usar Conventional Commits?","herramientas","Herramientas","algunos-proyectos-que-lo-usan","Algunos proyectos que lo usan","Conventional Commits","MAJOR","MINOR","PATCH","class-name","LINEA_EN_BLANCO","Si el tipo es ","https:\u002F\u002Fsemver.org\u002F#summary","BREAKING","CHANGE","hr","literal-property","property","template-punctuation","`","in","control-flow","for","maybe-class-name","2022-12-15T06:08:06.386Z")));